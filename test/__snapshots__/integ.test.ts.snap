// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`simple test 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24ArtifactHashBA91B77F": Object {
      "Description": "Artifact hash for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5": Object {
      "Description": "S3 bucket for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861": Object {
      "Description": "S3 key for asset version \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParametersa267737655f9259595947e7448b80196c4da6e4042f73a8116b2d99bb46609f9ArtifactHash2529C9E6": Object {
      "Description": "Artifact hash for asset \\"a267737655f9259595947e7448b80196c4da6e4042f73a8116b2d99bb46609f9\\"",
      "Type": "String",
    },
    "AssetParametersa267737655f9259595947e7448b80196c4da6e4042f73a8116b2d99bb46609f9S3Bucket15AB4424": Object {
      "Description": "S3 bucket for asset \\"a267737655f9259595947e7448b80196c4da6e4042f73a8116b2d99bb46609f9\\"",
      "Type": "String",
    },
    "AssetParametersa267737655f9259595947e7448b80196c4da6e4042f73a8116b2d99bb46609f9S3VersionKey398008F6": Object {
      "Description": "S3 key for asset version \\"a267737655f9259595947e7448b80196c4da6e4042f73a8116b2d99bb46609f9\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "LambdaSubminuteIteratorLambdaIterator43007E8C": Object {
      "DependsOn": Array [
        "LambdaSubminuteIteratorLambdaIteratorLambdaRoleDefaultPolicy259A62D8",
        "LambdaSubminuteIteratorLambdaIteratorLambdaRole980819E8",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersa267737655f9259595947e7448b80196c4da6e4042f73a8116b2d99bb46609f9S3Bucket15AB4424",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersa267737655f9259595947e7448b80196c4da6e4042f73a8116b2d99bb46609f9S3VersionKey398008F6",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersa267737655f9259595947e7448b80196c4da6e4042f73a8116b2d99bb46609f9S3VersionKey398008F6",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "A function for breaking the limit of 1 minute with the CloudWatch Rules.",
        "Environment": Object {
          "Variables": Object {
            "TARGET_FN_NAME": Object {
              "Ref": "targetFunctionFDF105E2",
            },
          },
        },
        "FunctionName": "lambda-subminute-iterator",
        "Handler": "iterator_agent.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "LambdaSubminuteIteratorLambdaIteratorLambdaRole980819E8",
            "Arn",
          ],
        },
        "Runtime": "python3.8",
        "Timeout": 58,
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "LambdaSubminuteIteratorLambdaIteratorLambdaRole980819E8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "An execution role for a Lambda function to invoke a target Lambda Function per time unit less than one minute",
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AWSXRayDaemonWriteAccess",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
        "RoleName": "Lambda-Iterator-Role",
      },
      "Type": "AWS::IAM::Role",
    },
    "LambdaSubminuteIteratorLambdaIteratorLambdaRoleDefaultPolicy259A62D8": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "targetFunctionFDF105E2",
                  "Arn",
                ],
              },
              "Sid": "TargetLambdaPermission",
            },
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LambdaSubminuteIteratorLambdaIteratorLambdaRoleDefaultPolicy259A62D8",
        "Roles": Array [
          Object {
            "Ref": "LambdaSubminuteIteratorLambdaIteratorLambdaRole980819E8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LambdaSubminuteIteratorLambdaIteratorLogRetention5C3C3E8C": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "LambdaSubminuteIteratorLambdaIterator43007E8C",
              },
            ],
          ],
        },
        "RetentionInDays": 90,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "targetFunctionFDF105E2": Object {
      "DependsOn": Array [
        "targetFunctionServiceRole6EE8FF2F",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "exports.handler = function(event, ctx, cb) { return cb(null, \\"hi\\"); })",
        },
        "FunctionName": "testTargetFunction",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "targetFunctionServiceRole6EE8FF2F",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "targetFunctionServiceRole6EE8FF2F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
